servers = (
  {
    address = "irc.ipv6.efnet.org";
    chatnet = "Efnet";
    port = "6667";
    use_ssl = "no";
    ssl_verify = "no";
    autoconnect = "yes";
  }
);

chatnets = {
  Efnet = {
    type = "IRC";
    nick = "Osmosis";
    #    autosendcmd = "/msg nickserv identify Mjw9kk33 ;wait 2000; /mode Osmosis -x";
  };

};

channels = (
  { name = "#shellco.de"; chatnet = "Efnet"; autojoin = "Yes"; }
);

aliases = {
  J = "join";
  LEAVE = "part";
  E = "exec";
  EO = "exec -o";
  EXIT = "quit";
  LL = "lastlog";
  W = "window";
  M = "mark";
  WC = "window close";
  WN = "window new hide";
  RUN = "SCRIPT LOAD";
  Q = "QUERY";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb $N}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$tag/$T{sbmode $M}}";
    #window = "{sb $winref:$tag/$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://irssi.org/help/";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "yes";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "0";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
        active = { };
        usercount = { };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "bottom";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };

    awl_0 = {
      items = {
        barstart = { priority = "100"; };
        awl_0 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};

settings = {
  core = {
    real_name = "[root@yourbox]#";
    user_name = "Osmosis";
    nick = "Osmosis";
    awaylog_level = "MSGS HILIGHT";
    awaylog_file = "~/.irssi/away.log";
    hostname = "2607:fcd0:1337:4a::2";
  };

  "fe-text" = { actlist_sort = "refnum"; };

  "fe-common/core" = {
    emphasis = "OFF";
    theme = "my";
    beep_msg_level = "MSGS NOTICES DCC DCCMSGS HILIGHT";
    bell_beeps = "yes";
    hilight_nick_matches = "no";
    autolog_path = "~/irclogs/$tag/$0.log";
    autolog = "yes";
    autolog_level = "ALL -CRAP -CLIENTCRAP -CTCPS";
    use_status_window = "yes";
    beep_when_window_active = "yes";
    beep_when_away = "yes";
  };

  "perl/core/scripts" = {
    neat_maxlength = "13";
    awl_display_key = "$Q%K|%n$H$C$S";
    awl_position = "0";
    awl_sbar_maxlength = "no";
    awl_maxlines = "1";
    awl_block = "-15";
  };
};

ignores = ( { level = "JOINS PARTS QUITS NICKS"; } );

hilights = (
  { text = "Osmosis"; nick = "no"; word = "no"; fullword = "yes"; },
  { text = ""; nick = "no"; word = "no"; fullword = "yes"; }
);

logs = { };
